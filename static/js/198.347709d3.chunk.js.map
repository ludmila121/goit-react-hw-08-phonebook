{"version":3,"file":"static/js/198.347709d3.chunk.js","mappings":"iRAKe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAQD,OACE,UAAC,IAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,wBAAI,oBACJ,UAAC,IAAD,CACED,UAAU,OACVE,SAZe,SAAAC,GACnBA,EAAEC,iBACFhB,EAASiB,EAAAA,EAAAA,SAAwB,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAOKU,aAAa,MACbC,GAAI,CAAEC,GAAI,GAJZ,WAME,SAAC,IAAD,CACEC,OAAO,SACPC,KAAK,OACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNvB,KAAK,OACLe,aAAa,OACbS,WAAS,EACThB,MAAOR,EACPyB,SAAUnB,KAEZ,SAAC,IAAD,CACEY,OAAO,SACPC,KAAK,QACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNvB,KAAK,QACLe,aAAa,QACbS,WAAS,EACThB,MAAON,EACPuB,SAAUnB,KAEZ,SAAC,IAAD,CACEY,OAAO,SACPC,KAAK,WACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNvB,KAAK,WACLe,aAAa,mBACbS,WAAS,EACThB,MAAOJ,EACPqB,SAAUnB,KAEZ,SAAC,IAAD,CAAQa,KAAK,SAASO,QAAQ,YAA9B,SAA0C,wBAMjD,C","sources":["views/RegisterView.jsx"],"sourcesContent":["import { Box, Button, Container, TextField } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <h1>Create Account</h1>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n        sx={{ mt: 1 }}\n      >\n        <TextField\n          margin=\"normal\"\n          type=\"text\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          autoComplete=\"name\"\n          autoFocus\n          value={name}\n          onChange={handleChange}\n        />\n        <TextField\n          margin=\"normal\"\n          type=\"email\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n          value={email}\n          onChange={handleChange}\n        />\n        <TextField\n          margin=\"normal\"\n          type=\"password\"\n          required\n          fullWidth\n          id=\"password\"\n          label=\"Password\"\n          name=\"password\"\n          autoComplete=\"current-password\"\n          autoFocus\n          value={password}\n          onChange={handleChange}\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Create Account\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","component","maxWidth","onSubmit","e","preventDefault","authOperations","autoComplete","sx","mt","margin","type","required","fullWidth","id","label","autoFocus","onChange","variant"],"sourceRoot":""}